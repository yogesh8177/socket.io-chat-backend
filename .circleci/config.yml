# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.0
        environment:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: chatDB
          MYSQL_USER: yogesh
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PORT: "3306"
          NODE_ENV: dev

      - image: mysql:8.0.16
        environment:
          MYSQL_DATABASE: chatDB
          MYSQL_USER: yogesh
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          name: Install node dependencies
          command: npm install

      - run:
          name: Run Auth Service
          command: cd ./authService && npm install && npm start
          background: true

      - run: 
          name: Running chat app
          command: npm start
          background: true

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      #- run: npm test

  test_auth_service:
    docker:
      - image: circleci/node:10.16.0
        environment:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: chatDB
          MYSQL_USER: yogesh
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PORT: "3306"
          NODE_ENV: dev

      - image: mysql:8.0.16
        environment:
          MYSQL_DATABASE: chatDB
          MYSQL_USER: yogesh
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        
      
    working_directory: ~/repo

    steps:

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          name: Install node dependencies
          command: cd ./authService && npm install

      - run:
          name: Run Auth Service Tests
          command: cd ./authService && npm test
          


      